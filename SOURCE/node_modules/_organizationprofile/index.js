'use strict';
/******************************************************************************
  DEPENDENCIES = CUSTOM SDK [Custom Software Development Kit]
******************************************************************************/
const eventstopper  = require('eventstopper');
/******************************************************************************
  PARAMETER = ARGUMENT
******************************************************************************/
// no cli tool
/******************************************************************************
  MODULE INTERNALS & HELPERS
******************************************************************************/
const template      = require('./index.template.html');
let __              = document.createElement('div');

function organizationprofile (dom, data) { // // @TODO: 'data' maybe also to use for event delegation pattern
  /*var param = { // @TODO: maybe use ES6 or maybe "flow types" to describe INPUT
       dom      : containerDomNode,
       data     : { name: url, logo: url, location: string, website: url }
  }*/
  const COMPONENT   = (__.innerHTML=template,__.childNodes[0]);
  const __name      = COMPONENT.querySelectorAll('.organizationprofile__name')[0];
  const __logo      = COMPONENT.querySelectorAll('.organizationprofile__logo')[0];
  const __location  = COMPONENT.querySelectorAll('.organizationprofile__location')[0];
  const UPDATE      = {
    // @TODO: update functions might be "required"
    // @TODO: update functions might delegate to "child components"
    name              : function UPDATE_name (old, now) {
      __name.innerHTML = now;
    },
    logo              : function UPDATE_logo (old, now) {
      __logo.innerHTML = `<img src="${now}" width="128"/>`;
    },
    location          : function UPDATE_location (old, now) {
      __location.innerHTML = `(${now})`;
    },
    website           : function UPDATE_website (old, now) {
      COMPONENT.setAttribute('href', now);
      COMPONENT.setAttribute('target', '_blank');
    }
  };


  /****** INITIALIZE & DEFAULTS *******/
  // @TODO: use streams to "initialize" and "update"
  UPDATE.name(undefined, data.name || '');
  UPDATE.logo(undefined, data.logo || '');
  UPDATE.location(undefined, data.location || '');
  UPDATE.website(undefined, data.website || '');

  /******** WIRE UP (for SYSTEM UPDATES) ********/
  // @TODO: use streams to "initialize" and "update"
  // data.on('name', UPDATE_name);
  // data.on('logo', UPDATE_logo);
  // data.on('logo', UPDATE_location);

  /******** WIRE UP (for USER UPDATES) ********/
  // __name.addEventListener()
  // __logo.addEventListener()
  // __location.addEventListener()
  // COMPONENT.addEventListener('click', function onClick (event) {
  //   eventstopper(event);
  //   window.open(data.website, '_blank');
  // });

  /******** RETURN *********/
  dom.appendChild(COMPONENT);
  var API = {}; // @TODO: should be an event emitter too - or stream?
  return API;   // @TODO: would this maybe return "a stream" ?
}
/******************************************************************************
  EXPORT
******************************************************************************/
module.exports = organizationprofile;
